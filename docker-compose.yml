x-superset-image: &superset-image duynguyenngoc/superset:latest

x-superset-user: &superset-user root

x-superset-volumes: &superset-volumes
  - superset_home:/app/superset_home
  - ./config.py:/app/superset/config.py

version: "3.7"

services:
 superset:
    env_file: .env
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker-bootstrap.sh", "app"]
    restart: unless-stopped
    user: *superset-user
    volumes: *superset-volumes
    environment:
      CYPRESS_CONFIG: "${CYPRESS_CONFIG}"
    network_mode: host

 superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker-bootstrap.sh", "worker"]
    env_file: .env
    restart: unless-stopped
    user: *superset-user
    volumes: *superset-volumes
    network_mode: host

volumes:
  superset_home:
    external: false
  
  # superset-worker-beat:
  #   image: *superset-image
  #   container_name: superset_worker_beat
  #   command: ["/app/docker/docker-bootstrap.sh", "beat"]
  #   env_file: docker/.env
  #   restart: unless-stopped
  #   depends_on: *superset-depends-on
  #   user: *superset-user
  #   volumes: *superset-volumes

  # superset-tests-worker:
  #   image: *superset-image
  #   container_name: superset_tests_worker
  #   command: ["/app/docker/docker-bootstrap.sh", "worker"]
  #   env_file: docker/.env
  #   environment:
  #     DATABASE_HOST: localhost
  #     DATABASE_DB: test
  #     REDIS_CELERY_DB: 2
  #     REDIS_RESULTS_DB: 3
  #     REDIS_HOST: localhost
  #   network_mode: host
  #   depends_on: *superset-depends-on
  #   user: *superset-user
  #   volumes: *superset-volumes
